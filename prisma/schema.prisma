generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  Professor
  Student
}

enum Phase {
  Prelim
  Midterm
  Semifinal
  Final
}

model Account {
  id String @id @default(uuid())
  fullname String
  email String @unique
  password String
  active Boolean @default(false)
  role Role
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  subjects Subject[]
  students Student[]
}

model Semester {
  id String @id @default(uuid())
  name String @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  subjects Subject[]
  types Type[]
}

model Type {
  id String @id @default(uuid())
  name String
  percentage Int
  semester String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tasks Task[]

  Semester Semester @relation(fields: [semester], references: [id])
}

model Subject {
  id String @id @default(uuid())
  name String
  code String
  description String
  account String
  semester String
  active Boolean @default(true)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tasks Task[]
  students Student[]

  Account Account @relation(fields: [account], references: [id])
  Semester Semester @relation(fields: [semester], references: [id])
}

model Task {
  id String @id @default(uuid())
  name String
  description String
  passing Int
  total Int
  phase Phase
  subject String
  type String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  activities Activity[]

  Subject Subject @relation(fields: [subject], references: [id])
  Type Type @relation(fields: [type], references: [id])
}

model Student {
  id String @id @default(uuid())
  account String
  subject String
  active Boolean @default(false)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  activities Activity[]

  Account Account @relation(fields: [account], references: [id])
  Subject Subject @relation(fields: [subject], references: [id])
}

model Activity {
  id String @id @default(uuid())
  score Int
  student String
  task String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Student Student @relation(fields: [student], references: [id])
  Task Task @relation(fields: [task], references: [id])
}